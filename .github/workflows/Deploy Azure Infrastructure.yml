name: Deploy Azure Infrastructure

on:
  workflow_dispatch:
    inputs:
      appconfig_name:
        description: 'Azure App Configuration Name'
        required: true
        default: AcmeTicketsInfraConfiguration
      ExecuteDomainInfra:
        description: 'Execute domain infrastructure jobs after this point'
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  id-token: write
  actions: write

env:
  RESOURCE_GROUP: acmetickets-rg
  CONTAINERAPPS_ENVIRONMENT: acmeticketsacadev
  AZURE_LOCATION: eastus2
  SERVICEBUS_NAMESPACE: acmeticketsasb
  APPCONFIG_NAME: AcmeTicketsInfraConfiguration

jobs:
  deploy-shared-infra:
    runs-on: ubuntu-latest
    outputs:
      resource_group: ${{ steps.set-outputs.outputs.resource_group }}
      containerapps_env: ${{ steps.set-outputs.outputs.containerapps_env }}
      azure_location: ${{ steps.set-outputs.outputs.azure_location }}
      servicebus_namespace: ${{ steps.set-outputs.outputs.servicebus_namespace }}
    steps:
      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group if not exists
        run: |
          az group create \
            --name "$RESOURCE_GROUP" \
            --location "$AZURE_LOCATION"
          echo "Resource group '$RESOURCE_GROUP' ensured."

      - name: Ensure Log Analytics Workspace exists
        id: loganalytics
        run: |
          WORKSPACE_NAME="workspace-${RESOURCE_GROUP,,}"
          WORKSPACE_NAME="${WORKSPACE_NAME//_/-}"
          EXISTING=$(az monitor log-analytics workspace list --resource-group "$RESOURCE_GROUP" --query "[?name=='$WORKSPACE_NAME'].id" -o tsv)
          if [ -z "$EXISTING" ]; then
            az monitor log-analytics workspace create \
              --resource-group "$RESOURCE_GROUP" \
              --workspace-name "$WORKSPACE_NAME"
            echo "Created Log Analytics workspace: $WORKSPACE_NAME"
          else
            echo "Log Analytics workspace already exists: $WORKSPACE_NAME"
          fi
          WORKSPACE_CUSTOMER_ID=$(az monitor log-analytics workspace show --resource-group "$RESOURCE_GROUP" --workspace-name "$WORKSPACE_NAME" --query customerId -o tsv)
          WORKSPACE_SHARED_KEY=$(az monitor log-analytics workspace get-shared-keys --resource-group "$RESOURCE_GROUP" --workspace-name "$WORKSPACE_NAME" --query primarySharedKey -o tsv)
          echo "workspace_customer_id=$WORKSPACE_CUSTOMER_ID" >> $GITHUB_OUTPUT
          echo "workspace_shared_key=$WORKSPACE_SHARED_KEY" >> $GITHUB_OUTPUT
      
      - name: Register Microsoft.AppConfiguration provider
        run: |
          az provider register --namespace Microsoft.AppConfiguration

      - name: Create Azure App Configuration instance
        run: |
          az appconfig create \
            --name "$APPCONFIG_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --location "$AZURE_LOCATION" \
            --sku Free
          echo "Azure App Configuration instance '$APPCONFIG_NAME' provisioned."

      - name: Create Azure Container Apps Environment
        run: |
          az containerapp env create \
            --name "$CONTAINERAPPS_ENVIRONMENT" \
            --resource-group "$RESOURCE_GROUP" \
            --location "$AZURE_LOCATION" \
            --logs-workspace-id "${{ steps.loganalytics.outputs.workspace_customer_id }}" \
            --logs-workspace-key "${{ steps.loganalytics.outputs.workspace_shared_key }}"
          echo "Azure Container Apps Environment provisioned."

      - name: Create Azure Service Bus Namespace
        run: |
          az servicebus namespace create \
            --name "$SERVICEBUS_NAMESPACE" \
            --resource-group "$RESOURCE_GROUP" \
            --location "$AZURE_LOCATION" \
            --sku Standard
          echo "Azure Service Bus Namespace '$SERVICEBUS_NAMESPACE' provisioned."

      - name: Add ServiceBusNamespace to Azure App Configuration
        run: |
          az appconfig kv set \
            --name "$APPCONFIG_NAME" \
            --key "Shared:AzureServiceBusNamespace" \
            --value "$SERVICEBUS_NAMESPACE" \
            --yes
          echo "Added ServiceBusNamespace to Azure App Configuration."

      - name: Set workflow outputs
        id: set-outputs
        run: |
          echo "resource_group=$RESOURCE_GROUP" >> $GITHUB_OUTPUT
          echo "containerapps_env=$CONTAINERAPPS_ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "azure_location=$AZURE_LOCATION" >> $GITHUB_OUTPUT
          echo "servicebus_namespace=$SERVICEBUS_NAMESPACE" >> $GITHUB_OUTPUT

  call-eventmanagement-infra:
    needs: deploy-shared-infra
    if: ${{ github.event.inputs.ExecuteDomainInfra == 'true' }}
    uses: ./.github/workflows/Domain_EventManagement_Infra.yml
    with:
      resource_group: ${{ needs.deploy-shared-infra.outputs.resource_group }}
      containerapps_env: ${{ needs.deploy-shared-infra.outputs.containerapps_env }}
      azure_location: ${{ needs.deploy-shared-infra.outputs.azure_location }}
      servicebus_namespace: ${{ needs.deploy-shared-infra.outputs.servicebus_namespace }}
      shortdomainname: eventmgmt
      appconfig_name: ${{ github.event.inputs.appconfig_name }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  call-platformcompose-infra:
    needs: deploy-shared-infra
    if: ${{ github.event.inputs.ExecuteDomainInfra == 'true' }}
    uses: ./.github/workflows/Domain_PlatformCompose_Infra.yml
    with:
      resource_group: ${{ needs.deploy-shared-infra.outputs.resource_group }}
      containerapps_env: ${{ needs.deploy-shared-infra.outputs.containerapps_env }}
      azure_location: ${{ needs.deploy-shared-infra.outputs.azure_location }}
      servicebus_namespace: ${{ needs.deploy-shared-infra.outputs.servicebus_namespace }}
      shortdomainname: platformcomp
      appconfig_name: ${{ github.event.inputs.appconfig_name }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

  call-inventory-infra:
    needs: deploy-shared-infra
    if: ${{ github.event.inputs.ExecuteDomainInfra == 'true' }}
    uses: ./.github/workflows/Domain_Inventory_Infra.yml
    with:
      resource_group: ${{ needs.deploy-shared-infra.outputs.resource_group }}
      containerapps_env: ${{ needs.deploy-shared-infra.outputs.containerapps_env }}
      azure_location: ${{ needs.deploy-shared-infra.outputs.azure_location }}
      servicebus_namespace: ${{ needs.deploy-shared-infra.outputs.servicebus_namespace }}
      shortdomainname: inventory
      appconfig_name: ${{ github.event.inputs.appconfig_name }}
    secrets:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

